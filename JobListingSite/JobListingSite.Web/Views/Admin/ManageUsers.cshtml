@model X.PagedList.IPagedList<JobListingSite.Web.Models.Admin.UserViewModel>
@using X.PagedList
@using X.PagedList.Mvc.Core
@inject UserManager<User> _userManager
@inject SignInManager<User> _signInManager

@{
    ViewData["Title"] = "Manage Users";
    Layout = "_Layout";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
    body {
        background: linear-gradient(135deg, #43cea2, #185a9d);
        font-family: 'Segoe UI', sans-serif;
    }

    .manage-card {
        background-color: #ffffff;
        border-radius: 24px;
        box-shadow: 0 10px 30px rgba(24, 90, 157, 0.3);
        padding: 3rem;
        max-width: 1100px;
        width: 100%;
        margin: auto;
        margin-top: 3rem;
        animation: fadeInUp 0.6s ease;
    }

    h2 {
        font-weight: 700;
        color: #212529;
        text-align: center;
        margin-bottom: 2.5rem;
    }

    .btn-black-ombre {
        background: linear-gradient(to right, #434343, #000000);
        border: none;
        color: white;
        font-weight: 500;
        border-radius: 8px;
        padding: 10px 24px;
        transition: all 0.3s ease;
    }

        .btn-black-ombre:hover {
            color: #43cea2;
            box-shadow: 0 0 15px rgba(24, 90, 157, 0.7);
            transform: scale(1.05);
        }

    table {
        width: 100%;
        margin-top: 2.5rem;
        background-color: #f1f3f5;
        border-radius: 20px;
        overflow: hidden;
    }

    th {
        background-color: #e9ecef;
        color: #343a40;
        font-weight: bold;
        text-align: center;
        vertical-align: middle;
        padding: 15px;
        font-size: 1.1rem;
    }

    td {
        background-color: #f8f9fa;
        text-align: center;
        vertical-align: middle;
        padding: 14px;
        font-size: 1rem;
    }

    tbody tr:hover {
        background-color: #dee2e6;
    }

    .action-buttons {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 10px;
    }

    .btn-ombre-green, .btn-ombre-red {
        border: none;
        font-weight: 500;
        border-radius: 8px;
        padding: 8px 20px;
        font-size: 0.9rem;
        min-width: 120px;
        transition: all 0.3s ease;
    }

    .btn-ombre-green {
        background: linear-gradient(to right, #43cea2, #185a9d);
        color: white;
    }

        .btn-ombre-green:hover {
            color: #ffffff;
            box-shadow: 0 0 15px rgba(67, 206, 162, 0.6);
            transform: scale(1.05);
        }

    .btn-ombre-red {
        background: linear-gradient(to right, #ff416c, #ff4b2b);
        color: white;
    }

        .btn-ombre-red:hover {
            color: #ffffff;
            box-shadow: 0 0 15px rgba(255, 75, 43, 0.7);
            transform: scale(1.05);
        }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(25px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        .btn-ombre-green {
            background: linear-gradient(to right, #43cea2, #185a9d);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 8px 20px;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .btn-ombre-green:hover {
                box-shadow: 0 0 15px rgba(67, 206, 162, 0.6);
                transform: scale(1.05);
                color: #ffffff;
            }

        .btn-ombre-red {
            background: linear-gradient(to right, #ff416c, #ff4b2b);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 8px 20px;
            font-size: 0.9rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .btn-ombre-red:hover {
                box-shadow: 0 0 15px rgba(255, 75, 43, 0.7);
                transform: scale(1.05);
                color: #ffffff;
            }
    }

    tbody tr {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        tbody tr:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 8px 20px rgba(24, 90, 157, 0.25);
            background-color: #dee2e6;
        }

    .pagination {
        display: flex;
        justify-content: center;
        padding: 1.5rem 0;
        list-style: none;
        border-radius: 12px;
    }

        .pagination li a, .pagination li span {
            color: white;
            background: linear-gradient(to right, #434343, #000000);
            border: none;
            padding: 10px 18px;
            margin: 0 5px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
        }

            .pagination li a:hover, .pagination li span:hover {
                background: linear-gradient(to right, #43cea2, #185a9d);
                color: white;
                transform: scale(1.1);
                box-shadow: 0 0 10px rgba(67, 206, 162, 0.6);
            }

        .pagination .active span {
            background: linear-gradient(to right, #43cea2, #185a9d);
            color: white;
            box-shadow: 0 0 15px rgba(67, 206, 162, 0.7);
            transform: scale(1.1);
        }
</style>

<div class="manage-card">
    <h2><i class="fas fa-users-cog me-2"></i> Manage Users</h2>

    <div class="d-flex justify-content-center mb-4">
        <a asp-action="Dashboard" asp-controller="Admin" class="btn btn-black-ombre">
            <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
        </a>
    </div>

    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>User Name</th>
                <th>Email</th>
                <th>Role</th>
                <th style="width: 220px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                var loggedInUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <td>
                        <div class="d-flex justify-content-center gap-2">
                            @if (user.UserId != loggedInUserId)
                            {
                                <a asp-action="ChangeRole" asp-route-userId="@user.UserId" class="btn btn-ombre-green btn-sm">
                                    <i class="fas fa-user-cog"></i> Change Role
                                </a>

                                @if (user.IsLockedOut)
                                {
                                    <form asp-action="UnlockUser" method="post" class="d-inline unlock-form">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@user.UserId" />
                                        <button type="submit" class="btn btn-ombre-green btn-sm">
                                            <i class="fas fa-lock-open"></i> Unlock
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <form asp-action="LockUser" method="post" class="d-inline lock-form">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="userId" value="@user.UserId" />
                                        <button type="submit" class="btn btn-ombre-red btn-sm">
                                            <i class="fas fa-lock"></i> Lock
                                        </button>
                                    </form>
                                }
                            }
                            else
                            {
                                <button class="btn btn-secondary btn-sm" disabled>
                                    <i class="fas fa-ban"></i> Cannot Manage Yourself
                                </button>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(Model, page => Url.Action("ManageUsers", new { page }),
        new PagedListRenderOptions
        {
        Display = PagedListDisplayMode.IfNeeded,
        UlElementClasses = new[] { "pagination", "justify-content-center" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 5
        })
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const lockForms = document.querySelectorAll('.lock-form');
            const unlockForms = document.querySelectorAll('.unlock-form');

            lockForms.forEach(form => {
                form.addEventListener('submit', function (e) {
                    e.preventDefault();
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You are about to lock this user!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#ff4b2b',
                        cancelButtonColor: '#43cea2',
                        confirmButtonText: 'Yes, lock',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                });
            });

            unlockForms.forEach(form => {
                form.addEventListener('submit', function (e) {
                    e.preventDefault();
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You are about to unlock this user!",
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#28a745',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, unlock',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                });
            });
        });
    </script>
}
