@model X.PagedList.IPagedList<JobListingSite.Data.Entities.HRTicket>
@using JobListingSite.Data.Enums
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Manage Tickets";
    Layout = "_Layout";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
  body {
    background: linear-gradient(135deg, #43cea2, #185a9d);
    font-family: 'Segoe UI', sans-serif;
  }

  .card-container {
    background: #fff;
    border-radius: 24px;
    padding: 2.5rem;
    margin: 3rem auto;
    max-width: 1000px;
    box-shadow: 0 10px 25px rgba(0,0,0,0.15);
    animation: fadeInUp 0.6s ease;
  }

  h2 {
    text-align: center;
    color: #212529;
    font-weight: 700;
    margin-bottom: 2rem;
  }

  .ticket-card {
    background: #fff;
    border-radius: 16px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    transition: transform 0.3s ease;
  }
  .ticket-card:hover {
    transform: translateY(-4px);
  }

  .ticket-header {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    gap: .5rem;
    margin-bottom: .75rem;
  }
  .ticket-header h5 {
    flex: 1 1 auto;
    margin: 0;
    font-weight: 600;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .badges {
    display: flex;
    gap: .5rem;
    flex-wrap: wrap;
    align-items: center;
  }
  .badge-status, .badge-priority {
    border-radius: 20px;
    padding: 6px 12px;
    font-size: .85rem;
    font-weight: 600;
  }
  .badge-pending   { background: #f8c146; color: #5c4b00; }
  .badge-resolved  { background: #43cea2; color: #fff; }
  .badge-priority-low    { background: #5b86e5; color: #fff; }
  .badge-priority-normal { background: #43cea2; color: #fff; }
  .badge-priority-high   { background: #ffd200; color: #000; }
  .badge-priority-urgent { background: #ff5858; color: #fff; }

  .ticket-body {
    margin-bottom: 1rem;
    color: #495057;
    overflow: hidden;
  }
  .ticket-body p {
    margin: 0;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    white-space: normal;
  }

  .action-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: .5rem;
    justify-content: flex-start;
    margin-top: .75rem;
  }
  .action-buttons button,
  .action-buttons form .btn {
    flex: 0 1 auto;
    font-size: .85rem;
    padding: 6px 10px;
    min-width: 0;
    display: inline-flex;
    align-items: center;
    gap: .25rem;
  }

  .btn-ombre {
    background: linear-gradient(to right, #43cea2, #185a9d);
    color: #fff;
    border: none;
    border-radius: 8px;
    transition: box-shadow .2s ease, transform .2s ease;
  }
  .btn-ombre:hover {
    box-shadow: 0 4px 12px rgba(24,90,157,0.3);
    transform: translateY(-2px);
  }

  .btn-secondary {
    background: #6c757d;
    color: #fff;
    border: none;
    border-radius: 8px;
    transition: box-shadow .2s ease, transform .2s ease;
  }
  .btn-secondary:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    transform: translateY(-2px);
  }

  .btn-danger {
    background: #ff4b2b;
    color: #fff;
    border: none;
    border-radius: 8px;
    transition: box-shadow .2s ease, transform .2s ease;
  }
  .btn-danger:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    transform: translateY(-2px);
  }

  textarea.reply-box {
    width: 100%;
    border-radius: 8px;
    padding: .5rem;
    margin-top: .75rem;
    resize: vertical;
    min-height: 3rem;
  }

  /* hide button text on tiny screens */
  @@media (max-width: 576px) {
    .btn-text { display: none; }
    .ticket-header {
      flex-direction: column;
      align-items: flex-start;
    }
    .action-buttons {
      justify-content: space-between;
    }
  }

  @@keyframes fadeInUp {
    from { opacity: 0; transform: translateY(30px); }
    to   { opacity: 1; transform: translateY(0); }
  }
</style>

<div class="card-container">
  <h2><i class="fas fa-tasks me-2"></i> HR Support Tickets</h2>

  @if (!Model.Any()) {
    <div class="text-center text-muted py-5">
      <i class="fas fa-inbox fa-3x mb-3"></i>
      <h5>No tickets found.</h5>
    </div>
  } else {
    @foreach (var ticket in Model) {
      <div class="ticket-card">
        <div class="ticket-header">
          <h5 title="@ticket.Title">@ticket.Title</h5>
          <div class="badges">
            @if (ticket.Status == TicketStatus.Open) {
              <span class="badge-status badge-pending">Pending</span>
            } else {
              <span class="badge-status badge-resolved">Resolved</span>
            }
            <span class="badge-priority @GetPriorityClass(ticket.Priority)">
              @ticket.Priority
            </span>
          </div>
        </div>

        <div class="ticket-body">
          <p title="@ticket.Description">
            <i class="fas fa-align-left"></i>
            @ticket.Description
          </p>
        </div>

        <small class="text-muted">
          <i class="fas fa-calendar-alt"></i>
          @ticket.CreatedAt.ToLocalTime().ToString("g")
        </small>

        <div class="action-buttons">
          @* Resolve *@
          @if (ticket.Status == TicketStatus.Open) {
            <button type="button"
                    class="btn btn-secondary btn-sm"
                    onclick="confirmResolve(@ticket.Id)">
              <i class="fas fa-check"></i>
              <span class="btn-text">Resolve</span>
            </button>
          }

          @* Reply *@
          <form asp-action="ReplyToTicket" method="post" class="d-inline">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@ticket.Id" />
            <button type="submit" class="btn btn-ombre btn-sm">
              <i class="fas fa-reply"></i>
              <span class="btn-text">Reply</span>
            </button>
          </form>

          @* Delete *@
          <form id="deleteForm-@ticket.Id"
                asp-action="DeleteTicketAdmin"
                method="post"
                asp-route-id="@ticket.Id"
                class="d-inline">
            @Html.AntiForgeryToken()
            <button type="button" class="btn btn-danger btn-sm"
                    onclick="confirmDelete(@ticket.Id)">
              <i class="fas fa-trash"></i>
              <span class="btn-text">Delete</span>
            </button>
          </form>
        </div>

        @if (ticket.Status == TicketStatus.Open) {
          <form asp-action="ReplyToTicket" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@ticket.Id" />
            <textarea name="reply"
                      class="reply-box"
                      placeholder="Write your reply…"
                      required></textarea>
            <button type="submit"
                    class="btn btn-ombre btn-sm mt-1">
              <i class="fas fa-paper-plane"></i>
              <span class="btn-text">Send</span>
            </button>
          </form>
        }
      </div>
    }

    <div class="mt-4 text-center">
      @Html.PagedListPager(
        Model,
        page => Url.Action("ViewTickets", new { page }),
        new PagedListRenderOptions {
          UlElementClasses = new[] { "pagination justify-content-center" },
          LiElementClasses = new[] { "page-item" },
          PageClasses    = new[] { "page-link" }
        })
    </div>
  }

  <div class="text-center mt-4">
    <a asp-action="Dashboard" asp-controller="Admin" class="btn btn-ombre">
      <i class="fas fa-arrow-left me-1"></i>
      <span class="btn-text">Back to Admin Dashboard</span>
    </a>
  </div>
</div>

@section Scripts {
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    function confirmDelete(ticketId) {
      Swal.fire({
        title: 'Delete this ticket?',
        text: "This action cannot be undone!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, delete it!'
      }).then((res) => {
        if (res.isConfirmed) {
          document.getElementById('deleteForm-' + ticketId).submit();
        }
      });
    }

    function confirmResolve(ticketId) {
      Swal.fire({
        title: 'Mark as resolved?',
        text: "You can still reply afterward.",
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, resolve it!'
      }).then((res) => {
        if (res.isConfirmed) {
          const f = document.createElement('form');
          f.method = 'post';
          f.action = '@Url.Action("ResolveTicket","Admin")';
          const inp = document.createElement('input');
          inp.type = 'hidden'; inp.name = 'id'; inp.value = ticketId;
          f.appendChild(inp);
          document.body.appendChild(f);
          f.submit();
        }
      });
    }
  </script>
}

@functions {
  public string GetPriorityClass(TicketPriority p) => p switch {
    TicketPriority.Low    => "badge-priority-low",
    TicketPriority.Normal => "badge-priority-normal",
    TicketPriority.High   => "badge-priority-high",
    TicketPriority.Urgent => "badge-priority-urgent",
    _                     => "badge-priority-normal"
  };
}
