@model JobApplicationsViewModel
@using JobListingSite.Data.Enums
@using Microsoft.AspNetCore.Html
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Job Applications";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
    body {
        background: linear-gradient(135deg, #43cea2, #185a9d);
        font-family: 'Segoe UI', sans-serif;
    }

    .card-container {
        background: white;
        border-radius: 20px;
        padding: 2.5rem;
        margin: 3rem auto;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        animation: fadeInUp 0.6s ease;
        max-width: 1200px;
    }

    h2 {
        font-weight: 700;
        color: #212529;
        text-align: center;
        margin-bottom: 2rem;
    }

    /* Tabs base style */
    .custom-tabs .tab-btn {
        background: white;
        color: #185a9d;
        padding: 10px 20px;
        border-radius: 30px;
        font-weight: 600;
        font-size: 1rem;
        border: 2px solid transparent;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        transition: all 0.3s ease, transform 0.3s ease;
    }

        /* Color before active */
        .custom-tabs .tab-btn.pending {
            color: #11998e;
        }

        .custom-tabs .tab-btn.approved {
            color: #28a745;
        }

        .custom-tabs .tab-btn.rejected {
            color: #f8576c;
        }

        .custom-tabs .tab-btn.default {
            color: #185a9d;
        }

        /* Hover individually */
        .custom-tabs .tab-btn.pending:hover {
            background: linear-gradient(to right, #11998e, #38ef7d);
            color: white;
            box-shadow: 0 0 10px rgba(17, 153, 142, 0.5);
        }

        .custom-tabs .tab-btn.approved:hover {
            background: linear-gradient(to right, #28a745, #43cea2);
            color: white;
            box-shadow: 0 0 10px rgba(40, 167, 69, 0.5);
        }

        .custom-tabs .tab-btn.rejected:hover {
            background: linear-gradient(to right, #f8576c, #ff5858);
            color: white;
            box-shadow: 0 0 10px rgba(248, 87, 108, 0.5);
        }

        .custom-tabs .tab-btn.default:hover {
            background: linear-gradient(to right, #36d1dc, #5b86e5);
            color: white;
            box-shadow: 0 0 10px rgba(91, 134, 229, 0.5);
        }

        /* Active buttons */
        .custom-tabs .tab-btn.active {
            animation: bounceActive 0.5s ease forwards;
            transform: scale(1.05);
            font-weight: 700;
            color: white !important;
        }

            .custom-tabs .tab-btn.active.pending {
                background: linear-gradient(to right, #11998e, #38ef7d);
                box-shadow: 0 0 15px rgba(17, 153, 142, 0.6);
            }

            .custom-tabs .tab-btn.active.approved {
                background: linear-gradient(to right, #28a745, #43cea2);
                box-shadow: 0 0 15px rgba(40, 167, 69, 0.6);
            }

            .custom-tabs .tab-btn.active.rejected {
                background: linear-gradient(to right, #f8576c, #ff5858);
                box-shadow: 0 0 15px rgba(248, 87, 108, 0.6);
            }

            .custom-tabs .tab-btn.active.default {
                background: linear-gradient(to right, #36d1dc, #5b86e5);
                box-shadow: 0 0 15px rgba(91, 134, 229, 0.6);
            }

    @@keyframes bounceActive {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }

        100% {
            transform: scale(1.05);
        }
    }

    .table thead {
        background: linear-gradient(to right, #43cea2, #185a9d);
        color: white;
    }

    .pagination .page-link {
        border-radius: 8px;
        color: #185a9d;
        border: 1px solid #43cea2;
    }

    .pagination .active .page-link {
        background: linear-gradient(to right, #28a745, #43cea2);
        color: white;
        border: none;
    }

    .btn-back {
        background: linear-gradient(to right, #28a745, #43cea2); 
        color: white;
        font-weight: 600;
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 8px rgba(40, 167, 69, 0.4);
    }

        .btn-back:hover {
            background: linear-gradient(to right, #43cea2, #28a745); 
            color: white;
            box-shadow: 0 8px 18px rgba(40, 167, 69, 0.6);
            transform: translateY(-2px);
        }

        .badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 10px 18px;
    font-size: 0.9rem;
    font-weight: 600;
    border-radius: 50px;
    text-transform: capitalize;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
    animation: fadeInUp 0.6s ease;
}

    .badge-pending {
        background: linear-gradient(to right, #fceabb, #f8b500);
        color: #5c4b00;
        box-shadow: 0 0 12px rgba(248, 181, 0, 0.5);
    }


.badge-approved {
    background: linear-gradient(to right, #28a745, #43cea2);
    color: white;
    box-shadow: 0 0 12px rgba(40, 167, 69, 0.5);
}

.badge-rejected {
    background: linear-gradient(to right, #f8576c, #ff5858);
    color: white;
    box-shadow: 0 0 12px rgba(248, 87, 108, 0.5);
}

/* --- APPROVE / REJECT BUTTONS --- */
.btn-approve {
    background: linear-gradient(to right, #28a745, #43cea2);
    color: white;
    border: none;
    font-weight: 600;
    border-radius: 8px;
    padding: 8px 20px;
    transition: all 0.3s ease;
}

.btn-approve:hover {
    background: linear-gradient(to right, #43cea2, #28a745);
    box-shadow: 0 6px 15px rgba(67, 206, 162, 0.5);
    transform: translateY(-2px) scale(1.02);
}

.btn-reject {
    background: linear-gradient(to right, #f8576c, #ff5858);
    color: white;
    border: none;
    font-weight: 600;
    border-radius: 8px;
    padding: 8px 20px;
    transition: all 0.3s ease;
}

.btn-reject:hover {
    background: linear-gradient(to right, #ff5858, #f8576c);
    box-shadow: 0 6px 15px rgba(255, 88, 88, 0.5);
    transform: translateY(-2px) scale(1.02);
}

@@keyframes fadeInUp {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
}

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
    .job-card {
        padding: 15px;
    }

    .btn-gradient, .btn-gradient-blue, .btn-gradient-red, .btn-gradient-teal, .btn-gradient-greenyellow, .btn-back {
        min-width: unset;
        min-height: unset;
        padding: 6px 12px;
        font-size: 0.85rem;
    }

    .d-flex.flex-wrap.gap-2.mt-4, .d-flex.justify-content-start.align-items-center.flex-wrap.gap-2.mt-4 {
        flex-direction: column;
        align-items: stretch;
    }
}

@@media (max-width: 768px) {
    .card-container {
        padding: 1.5rem;
    }

    table.table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }

    table thead {
        display: none;
    }

    table tbody td {
        display: block;
        text-align: left;
        border: none;
        padding: 0.75rem 0;
    }
}

    .table {
        background-color: white;
    }

    .table-striped > tbody > tr:nth-of-type(odd) {
        --bs-table-accent-bg: white;
    }


</style>

<div class="card-container">
    <h2><i class="fas fa-clipboard-list me-2"></i> Applications for: <span class="text-success">@Model.OfferTitle</span></h2>

    @{
        var currentStatus = Context.Request.Query["statusFilter"].ToString();
        string tabUrl(string? status) => Url.Action("ViewApplications", new { id = Model.OfferId, statusFilter = status });
    }

    <div class="custom-tabs mb-4 d-flex gap-2 flex-wrap justify-content-center">
        <a href="@tabUrl(null)" class="tab-btn default @(string.IsNullOrEmpty(currentStatus) ? "active default" : "")">
            <i class="fas fa-list me-1"></i> All
        </a>
        <a href="@tabUrl("Pending")" class="tab-btn pending @(currentStatus == "Pending" ? "active pending" : "")">
            <i class="fas fa-hourglass-start me-1"></i> Pending
        </a>
        <a href="@tabUrl("Approved")" class="tab-btn approved @(currentStatus == "Approved" ? "active approved" : "")">
            <i class="fas fa-check-circle me-1"></i> Approved
        </a>
        <a href="@tabUrl("Rejected")" class="tab-btn rejected @(currentStatus == "Rejected" ? "active rejected" : "")">
            <i class="fas fa-times-circle me-1"></i> Rejected
        </a>
    </div>

    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Applicant</th>
                <th>Email</th>
                <th>Applied On</th>
                <th>Status</th>
                <th>Actions</th>
                <th>Resume</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var app in Model.ApplicationsPaged)
            {
                <tr>
                    <td>
                        @app.ApplicantName
                        <a class="ms-2 btn btn-sm btn-outline-success"
                       href="@Url.Action("PublicProfile", "LoggedUser", new { id = app.ApplicantId })"
                       title="View Profile">
                            <i class="fas fa-user-circle"></i>
                        </a>
                    </td>
                    <td>@app.ApplicantEmail</td>
                    <td>@app.TimeAgo</td>
                    <td>@Html.Raw(GetBadgeHtml(app.Status))</td>
                    <td>
                        @if (app.Status == ApplicationStatus.Pending)
                        {
                            <button type="button" class="btn btn-approve btn-sm me-1" data-bs-toggle="modal" data-bs-target="#approveModal-@app.Id">
                                <i class="fas fa-check-circle me-1"></i> Approve
                            </button>
                            <button type="button" class="btn btn-reject btn-sm" data-bs-toggle="modal" data-bs-target="#rejectModal-@app.Id">
                                <i class="fas fa-times-circle me-1"></i> Reject
                            </button>
                        }
                        else
                        {
                            <span class="text-muted">—</span>
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(app.ResumeFilePath))
                        {
                            <a href="@app.ResumeFilePath" target="_blank" class="btn btn-sm btn-outline-primary" title="Download Resume">
                                <i class="fas fa-download"></i>
                            </a>
                        }
                        else
                        {
                            <span class="text-muted small">No resume</span>
                        }
                    </td>
                </tr>

                <!-- Approve Modal -->
                <div class="modal fade" id="approveModal-@app.Id" tabindex="-1" aria-labelledby="approveLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <form asp-action="ApproveApplication" method="post">
                                <div class="modal-header">
                                    <h5 class="modal-title">Approve Application</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    Are you sure you want to approve <strong>@app.ApplicantName</strong>'s application?
                                </div>
                                <div class="modal-footer">
                                    <input type="hidden" name="applicationId" value="@app.Id" />
                                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-success px-4">
                                        <i class="fas fa-check"></i> Approve
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Reject Modal -->
                <div class="modal fade" id="rejectModal-@app.Id" tabindex="-1" aria-labelledby="rejectLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <form asp-action="RejectApplication" method="post">
                                <div class="modal-header">
                                    <h5 class="modal-title">Reject Application</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    Are you sure you want to reject <strong>@app.ApplicantName</strong>'s application?
                                </div>
                                <div class="modal-footer">
                                    <input type="hidden" name="applicationId" value="@app.Id" />
                                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-danger px-4">
                                        <i class="fas fa-times"></i> Reject
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-between align-items-center mt-4">
        <a class="btn btn-back" href="@Url.Action("ManageJobs", "Company")">
            <i class="fas fa-arrow-left me-1"></i> Back to Jobs
        </a>

        @Html.PagedListPager(Model.ApplicationsPaged, page =>
        Url.Action("ViewApplications", new {
        id = Model.OfferId,
        statusFilter = Context.Request.Query["statusFilter"],
        page
        }),
        new PagedListRenderOptions {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 5
        }
        )
    </div>
</div>

@functions {
    public IHtmlContent GetBadgeHtml(ApplicationStatus status)
    {
        var icon = status switch
        {
            ApplicationStatus.Pending => "<i class='fas fa-hourglass-half me-1'></i>",
            ApplicationStatus.Approved => "<i class='fas fa-check-circle me-1'></i>",
            ApplicationStatus.Rejected => "<i class='fas fa-times-circle me-1'></i>",
            _ => ""
        };

        var badgeClass = status switch
        {
            ApplicationStatus.Pending => "badge badge-pending",
            ApplicationStatus.Approved => "badge badge-approved",
            ApplicationStatus.Rejected => "badge badge-rejected",
            _ => "badge bg-secondary text-white rounded-pill px-3 py-2"
        };

        return new HtmlString($"<span class='{badgeClass}'>{icon} {status}</span>");
    }
}

