@using JobListingSite.Data.Enums
@using Microsoft.AspNetCore.Html
@using X.PagedList
@using X.PagedList.Mvc.Core
@model JobApplicationsViewModel

@{
    ViewData["Title"] = "Job Applications";
}

<style>
    body {
        background: linear-gradient(135deg, #43cea2, #185a9d);
        font-family: 'Segoe UI', sans-serif;
    }

    .custom-tabs .tab-btn {
        background: white;
        color: #185a9d;
        padding: 10px 18px;
        border-radius: 30px;
        font-weight: 500;
        border: 2px solid transparent;
        text-decoration: none;
        transition: 0.3s ease;
        display: inline-flex;
        align-items: center;
    }

        .custom-tabs .tab-btn:hover {
            background: #f0fdf4;
            border-color: #43cea2;
            color: #28a745;
            box-shadow: 0 2px 8px rgba(67, 206, 162, 0.25);
        }

        .custom-tabs .tab-btn.active {
            background: linear-gradient(to right, #28a745, #43cea2);
            color: white !important;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            font-weight: 600;
        }

    .pagination .page-link {
        border-radius: 8px;
        color: #28a745;
        border: 1px solid #28a745;
    }

        .pagination .page-link:hover {
            background: #43cea2;
            color: white;
        }

    .pagination .active .page-link {
        background: linear-gradient(to right, #28a745, #43cea2);
        color: white;
        border: none;
    }

    .btn-back {
        background: linear-gradient(to right, #28a745, #43cea2);
        color: white !important;
        font-weight: 500;
        border: none;
        border-radius: 30px;
        padding: 8px 18px;
        transition: 0.3s ease;
    }

        .btn-back:hover {
            background: linear-gradient(to right, #43cea2, #28a745);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transform: translateY(-1px);
        }

</style>

<div class="card shadow p-4">
    <h2 class="mb-4">Applications for: <span class="text-success">@Model.OfferTitle</span></h2>

    @{
        var currentStatus = Context.Request.Query["statusFilter"].ToString();
        string tabUrl(string? status) => Url.Action("ViewApplications", new { id = Model.OfferId, statusFilter = status });
    }

    <div class="custom-tabs mb-4 d-flex gap-2 flex-wrap">
        <a href="@tabUrl(null)" class="tab-btn @(string.IsNullOrEmpty(currentStatus) ? "active" : "")">
            <i class="bi bi-list-task me-1"></i> All
        </a>
        <a href="@tabUrl("Pending")" class="tab-btn @(currentStatus == "Pending" ? "active" : "")">
            <i class="bi bi-hourglass-split me-1"></i> Pending
        </a>
        <a href="@tabUrl("Approved")" class="tab-btn @(currentStatus == "Approved" ? "active" : "")">
            <i class="bi bi-check-circle me-1"></i> Approved
        </a>
        <a href="@tabUrl("Rejected")" class="tab-btn @(currentStatus == "Rejected" ? "active" : "")">
            <i class="bi bi-x-circle me-1"></i> Rejected
        </a>
    </div>

    <table class="table table-striped table-bordered">
        <thead class="table-success">
            <tr>
                <th>Applicant</th>
                <th>Email</th>
                <th>Applied On</th>
                <th>Status</th>
                <th style="width: 160px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var app in Model.ApplicationsPaged)
            {
                <tr>
                    <td>
                        @app.ApplicantName
                        <a class="ms-2 btn btn-sm btn-outline-success"
                       href="@Url.Action("PublicProfile", "LoggedUser", new { id = app.ApplicantId })"
                       title="View Profile">
                            <i class="bi bi-person-lines-fill"></i>
                        </a>
                    </td>
                    <td>@app.ApplicantEmail</td>
                    <td>@app.TimeAgo</td>
                    <td>@Html.Raw(GetBadgeHtml(app.Status))</td>
                    <td>
                        @if (app.Status == ApplicationStatus.Pending)
                        {
                            <button type="button" class="btn btn-success btn-sm me-1" data-bs-toggle="modal" data-bs-target="#approveModal-@app.Id">Approve</button>
                            <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#rejectModal-@app.Id">Reject</button>
                        }
                        else
                        {
                            <span class="text-muted">—</span>
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(app.ResumeFilePath))
                        {
                            <a href="@app.ResumeFilePath" target="_blank" class="btn btn-sm btn-outline-green" title="Download Resume">
                                <i class="bi bi-download"></i>
                            </a>
                        }
                        else
                        {
                            <span class="text-muted small">No resume</span>
                        }
                    </td>

                </tr>
                <!-- ✅ Modal code goes here (approve/reject) -->
                <!-- ✅ Approve Modal -->
                <div class="modal fade" id="approveModal-@app.Id" tabindex="-1" aria-labelledby="approveLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <form asp-action="ApproveApplication" method="post">
                                <div class="modal-header">
                                    <h5 class="modal-title">Approve Application</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    Are you sure you want to approve <strong>@app.ApplicantName</strong>'s application?
                                </div>
                                <div class="modal-footer">
                                    <input type="hidden" name="applicationId" value="@app.Id" />
                                    <button type="button" class="btn btn-outline-green" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-gradient px-4">
                                        <i class="bi bi-check-circle me-1"></i> Approve
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- ❌ Reject Modal -->
                <div class="modal fade" id="rejectModal-@app.Id" tabindex="-1" aria-labelledby="rejectLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <form asp-action="RejectApplication" method="post">
                                <div class="modal-header">
                                    <h5 class="modal-title">Reject Application</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    Are you sure you want to reject <strong>@app.ApplicantName</strong>'s application?
                                </div>
                                <div class="modal-footer">
                                    <input type="hidden" name="applicationId" value="@app.Id" />
                                    <button type="button" class="btn btn-outline-green" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-gradient px-4">
                                        <i class="bi bi-x-circle me-1"></i> Reject
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

            }
        </tbody>
    </table>

    <div class="d-flex justify-content-between align-items-center mt-4">
        <a class="btn-back" href="@Url.Action("ManageJobs", "Company")">
            <i class="bi bi-arrow-left-circle me-1"></i> Back to Jobs
        </a>

        @Html.PagedListPager(Model.ApplicationsPaged, page =>
        Url.Action("ViewApplications", new {
        id = Model.OfferId,
        statusFilter = Context.Request.Query["statusFilter"],
        page
        }),
        new PagedListRenderOptions
        {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 5
        })
    </div>
</div>

@functions {
    public IHtmlContent GetBadgeHtml(ApplicationStatus status)
    {
        var icon = status switch
        {
            ApplicationStatus.Pending => "<i class='bi bi-hourglass-split me-1'></i>",
            ApplicationStatus.Approved => "<i class='bi bi-check-circle-fill me-1'></i>",
            ApplicationStatus.Rejected => "<i class='bi bi-x-circle-fill me-1'></i>",
            _ => ""
        };

        var css = status switch
        {
            ApplicationStatus.Pending => "badge bg-info text-white rounded-pill px-3 py-2",
            ApplicationStatus.Approved => "badge bg-success text-white rounded-pill px-3 py-2",
            ApplicationStatus.Rejected => "badge bg-danger text-white rounded-pill px-3 py-2",
            _ => "badge bg-secondary text-white rounded-pill px-3 py-2"
        };

        return new HtmlString($"<span class='{css}'>{icon} {status}</span>");
    }
}
