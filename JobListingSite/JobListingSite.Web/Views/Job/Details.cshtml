@model JobListingSite.Data.Entities.Offer

@{
    ViewData["Title"] = "Job Details";
    Layout = "_Layout";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@4/animate.min.css" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    body {
        background: linear-gradient(135deg, #43cea2, #185a9d);
        font-family: 'Segoe UI', sans-serif;
    }

    .details-card {
        background-color: #fff;
        border-radius: 16px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        padding: 2.5rem;
        max-width: 700px;
        width: 100%;
        animation: fadeInUp 0.6s ease;
    }

    .job-header {
        border-bottom: 1px solid #ccc;
        margin-bottom: 1rem;
    }

    .job-title {
        font-weight: 700;
        font-size: 1.6rem;
        color: #185a9d;
    }

    .job-meta {
        font-style: italic;
        color: #555;
    }

    .job-description {
        margin-top: 1.5rem;
        line-height: 1.6;
    }

    .button-row {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 12px;
        margin-top: 2rem;
    }

    .action-btn {
        background: linear-gradient(to right, #28a745, #43cea2);
        border: none;
        color: white;
        font-weight: 600;
        padding: 12px 24px;
        border-radius: 10px;
        text-decoration: none;
        text-align: center;
        min-width: 220px;
        height: 48px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: all 0.4s ease;
        box-shadow: 0 0 20px rgba(67, 206, 162, 1);
        white-space: nowrap;
    }

        .action-btn i {
            margin-right: 8px;
            font-size: 1rem;
        }

        .action-btn:hover {
            background: linear-gradient(to right, #43cea2, #28a745);
            transform: translateY(-3px) scale(1.03);
            color: white;
            box-shadow: 0 0 20px rgba(67, 206, 162, 1);
        }


    @@media (max-width: 576px) {
        .action-btn {
            width: 100% !important;
            min-width: unset;
            font-size: 1rem;
        }

        .button-row {
            flex-direction: column;
            align-items: stretch;
            gap: 12px;
        }

</style>

<div class="container py-5">
    <div class="details-card mx-auto">
        <div class="job-header">
            <h2 class="job-title">
                <i class="fas fa-briefcase me-2"></i>@Model.Title
            </h2>
            <p class="job-meta">
                <i class="fas fa-building me-1"></i> @Model.Company?.CompanyProfile?.CompanyName |
                <i class="fas fa-tag me-1"></i> @Model.Category?.Name |
                <i class="fas fa-clock me-1"></i> Posted on @Model.CreatedAt.ToShortDateString()
            </p>
        </div>

        <div class="job-description">
            <h5><i class="fas fa-info-circle me-2"></i>Job Description</h5>
            <p>@Model.Description</p>
        </div>

        <div class="button-row">
            @if (User.Identity != null && User.Identity.IsAuthenticated && !(ViewData["IsCompany"] as bool? ?? false))
            {
                <form asp-action="Apply" method="post" id="applyForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="jobId" value="@Model.OfferId" />
                    <button id="applyButton" type="submit" class="action-btn">
                        <i class="fas fa-paper-plane"></i> Apply Now
                    </button>
                </form>
            }
            else if (!User.Identity?.IsAuthenticated ?? false)
            {
                var returnUrl = Url.Action("Details", "Job", new { id = Model.OfferId });

                <a asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl" class="action-btn">
                    <i class="fas fa-user-plus"></i> Register to Apply
                </a>
                <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@returnUrl" class="action-btn">
                    <i class="fas fa-sign-in-alt"></i> Login
                </a>
            }

            @if (Model.Company?.CompanyProfile != null)
            {
                <a asp-controller="Company" asp-action="Profile" asp-route-id="@Model.Company.Id" asp-route-returnTo="@Url.Action("Details", "Job", new { id = Model.OfferId })" class="action-btn">
                    <i class="fas fa-building"></i> View Company
                </a>
            }

            <a asp-controller="Job" asp-action="Browse" class="action-btn">
                <i class="fas fa-arrow-left"></i> Back to Listings
            </a>

            @if (Context.User.IsInRole("Company"))
            {
                <a asp-controller="Company" asp-action="ManageJobs" class="action-btn">
                    <i class="fas fa-briefcase"></i> Manage Jobs
                </a>
            }

            @if (Context.User.IsInRole("Admin"))
            {
                <a asp-controller="Admin" asp-action="Dashboard" class="action-btn">
                    <i class="fas fa-tools"></i> Dashboard
                </a>
            }

        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const successMessage = @Html.Raw(Json.Serialize(TempData["SuccessMessage"] ?? ""));
        const warningMessage = @Html.Raw(Json.Serialize(TempData["WarningMessage"] ?? ""));
        const errorMessage = @Html.Raw(Json.Serialize(TempData["ErrorMessage"] ?? ""));

        if (successMessage.trim()) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: successMessage,
                toast: true,
                timer: 3000,
                timerProgressBar: true,
                position: 'top-end',
                showConfirmButton: false
            });
        } else if (warningMessage.trim()) {
            Swal.fire({
                icon: 'warning',
                title: 'Warning!',
                text: warningMessage,
                toast: true,
                timer: 3000,
                timerProgressBar: true,
                position: 'top-end',
                showConfirmButton: false
            });
        } else if (errorMessage.trim()) {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: errorMessage,
                toast: true,
                timer: 3000,
                timerProgressBar: true,
                position: 'top-end',
                showConfirmButton: false
            });
        }

        const applyForm = document.getElementById('applyForm');
        const applyButton = document.getElementById('applyButton');

        if (applyForm && applyButton) {
            applyForm.addEventListener('submit', function (e) {
                e.preventDefault();

                Swal.fire({
                    title: 'Confirm Apply?',
                    text: "Do you want to apply for this job?",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, Apply!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        applyButton.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Applying...`;
                        applyButton.disabled = true;
                        applyForm.submit();
                    }
                });
            });
        }
    });
</script>
